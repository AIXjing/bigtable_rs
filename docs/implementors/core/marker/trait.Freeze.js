(function() {var implementors = {};
implementors["bigtable_rs"] = [{"text":"impl Freeze for RowCell","synthetic":true,"types":[]},{"text":"impl !Freeze for Error","synthetic":true,"types":[]},{"text":"impl Freeze for BigTableConnection","synthetic":true,"types":[]},{"text":"impl Freeze for BigTable","synthetic":true,"types":[]},{"text":"impl Freeze for StartKey","synthetic":true,"types":[]},{"text":"impl Freeze for EndKey","synthetic":true,"types":[]},{"text":"impl Freeze for StartQualifier","synthetic":true,"types":[]},{"text":"impl Freeze for EndQualifier","synthetic":true,"types":[]},{"text":"impl Freeze for StartValue","synthetic":true,"types":[]},{"text":"impl Freeze for EndValue","synthetic":true,"types":[]},{"text":"impl Freeze for Chain","synthetic":true,"types":[]},{"text":"impl Freeze for Interleave","synthetic":true,"types":[]},{"text":"impl Freeze for Condition","synthetic":true,"types":[]},{"text":"impl Freeze for Filter","synthetic":true,"types":[]},{"text":"impl Freeze for SetCell","synthetic":true,"types":[]},{"text":"impl Freeze for DeleteFromColumn","synthetic":true,"types":[]},{"text":"impl Freeze for DeleteFromFamily","synthetic":true,"types":[]},{"text":"impl Freeze for DeleteFromRow","synthetic":true,"types":[]},{"text":"impl Freeze for Mutation","synthetic":true,"types":[]},{"text":"impl Freeze for Rule","synthetic":true,"types":[]},{"text":"impl Freeze for RowStatus","synthetic":true,"types":[]},{"text":"impl Freeze for CellChunk","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl Freeze for Entry","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for BigtableClient&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Freeze for Row","synthetic":true,"types":[]},{"text":"impl Freeze for Family","synthetic":true,"types":[]},{"text":"impl Freeze for Column","synthetic":true,"types":[]},{"text":"impl Freeze for Cell","synthetic":true,"types":[]},{"text":"impl Freeze for RowRange","synthetic":true,"types":[]},{"text":"impl Freeze for RowSet","synthetic":true,"types":[]},{"text":"impl Freeze for ColumnRange","synthetic":true,"types":[]},{"text":"impl Freeze for TimestampRange","synthetic":true,"types":[]},{"text":"impl Freeze for ValueRange","synthetic":true,"types":[]},{"text":"impl Freeze for RowFilter","synthetic":true,"types":[]},{"text":"impl Freeze for Mutation","synthetic":true,"types":[]},{"text":"impl Freeze for ReadModifyWriteRule","synthetic":true,"types":[]},{"text":"impl Freeze for ReadRowsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ReadRowsResponse","synthetic":true,"types":[]},{"text":"impl Freeze for SampleRowKeysRequest","synthetic":true,"types":[]},{"text":"impl Freeze for SampleRowKeysResponse","synthetic":true,"types":[]},{"text":"impl Freeze for MutateRowRequest","synthetic":true,"types":[]},{"text":"impl Freeze for MutateRowResponse","synthetic":true,"types":[]},{"text":"impl Freeze for MutateRowsRequest","synthetic":true,"types":[]},{"text":"impl Freeze for MutateRowsResponse","synthetic":true,"types":[]},{"text":"impl Freeze for CheckAndMutateRowRequest","synthetic":true,"types":[]},{"text":"impl Freeze for CheckAndMutateRowResponse","synthetic":true,"types":[]},{"text":"impl Freeze for ReadModifyWriteRowRequest","synthetic":true,"types":[]},{"text":"impl Freeze for ReadModifyWriteRowResponse","synthetic":true,"types":[]}];
implementors["http_server"] = [{"text":"impl Freeze for Value","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()