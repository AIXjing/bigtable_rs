(function() {var implementors = {};
implementors["bigtable_rs"] = [{"text":"impl Clone for BigTableConnection","synthetic":false,"types":[]},{"text":"impl Clone for BigTable","synthetic":false,"types":[]},{"text":"impl Clone for Row","synthetic":false,"types":[]},{"text":"impl Clone for Family","synthetic":false,"types":[]},{"text":"impl Clone for Column","synthetic":false,"types":[]},{"text":"impl Clone for Cell","synthetic":false,"types":[]},{"text":"impl Clone for RowRange","synthetic":false,"types":[]},{"text":"impl Clone for StartKey","synthetic":false,"types":[]},{"text":"impl Clone for EndKey","synthetic":false,"types":[]},{"text":"impl Clone for RowSet","synthetic":false,"types":[]},{"text":"impl Clone for ColumnRange","synthetic":false,"types":[]},{"text":"impl Clone for StartQualifier","synthetic":false,"types":[]},{"text":"impl Clone for EndQualifier","synthetic":false,"types":[]},{"text":"impl Clone for TimestampRange","synthetic":false,"types":[]},{"text":"impl Clone for ValueRange","synthetic":false,"types":[]},{"text":"impl Clone for StartValue","synthetic":false,"types":[]},{"text":"impl Clone for EndValue","synthetic":false,"types":[]},{"text":"impl Clone for RowFilter","synthetic":false,"types":[]},{"text":"impl Clone for Chain","synthetic":false,"types":[]},{"text":"impl Clone for Interleave","synthetic":false,"types":[]},{"text":"impl Clone for Condition","synthetic":false,"types":[]},{"text":"impl Clone for Filter","synthetic":false,"types":[]},{"text":"impl Clone for Mutation","synthetic":false,"types":[]},{"text":"impl Clone for SetCell","synthetic":false,"types":[]},{"text":"impl Clone for DeleteFromColumn","synthetic":false,"types":[]},{"text":"impl Clone for DeleteFromFamily","synthetic":false,"types":[]},{"text":"impl Clone for DeleteFromRow","synthetic":false,"types":[]},{"text":"impl Clone for Mutation","synthetic":false,"types":[]},{"text":"impl Clone for ReadModifyWriteRule","synthetic":false,"types":[]},{"text":"impl Clone for Rule","synthetic":false,"types":[]},{"text":"impl Clone for ReadRowsRequest","synthetic":false,"types":[]},{"text":"impl Clone for ReadRowsResponse","synthetic":false,"types":[]},{"text":"impl Clone for CellChunk","synthetic":false,"types":[]},{"text":"impl Clone for RowStatus","synthetic":false,"types":[]},{"text":"impl Clone for SampleRowKeysRequest","synthetic":false,"types":[]},{"text":"impl Clone for SampleRowKeysResponse","synthetic":false,"types":[]},{"text":"impl Clone for MutateRowRequest","synthetic":false,"types":[]},{"text":"impl Clone for MutateRowResponse","synthetic":false,"types":[]},{"text":"impl Clone for MutateRowsRequest","synthetic":false,"types":[]},{"text":"impl Clone for Entry","synthetic":false,"types":[]},{"text":"impl Clone for MutateRowsResponse","synthetic":false,"types":[]},{"text":"impl Clone for Entry","synthetic":false,"types":[]},{"text":"impl Clone for CheckAndMutateRowRequest","synthetic":false,"types":[]},{"text":"impl Clone for CheckAndMutateRowResponse","synthetic":false,"types":[]},{"text":"impl Clone for ReadModifyWriteRowRequest","synthetic":false,"types":[]},{"text":"impl Clone for ReadModifyWriteRowResponse","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Clone&gt; Clone for BigtableClient&lt;T&gt;","synthetic":false,"types":[]}];
implementors["http_server"] = [{"text":"impl Clone for Value","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()